package com.xinonix.hl7.fhir.stu3;

import java.util.ArrayList;
import java.util.Date;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.JsonAdapter;

import com.xinonix.serialization.DateTimeAdapterDateTime;

/**
 * A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.
 */
public class CommunicationRequest extends DomainResource {
	@Expose
	private ResourceType resourceType;

	/**
	 * Getter for resourceType
	 * @return This is a CommunicationRequest resource
	 */
	public ResourceType getResourceType() { return resourceType; }

	/**
	 * Setter for resourceType
	 * @param value This is a CommunicationRequest resource
	 */
	public void setResourceType(ResourceType value) { resourceType = value; }


	@Expose
	private ArrayList<Identifier> identifier;

	/**
	 * Getter for identifier
	 * @return A unique ID of this request for reference purposes. It must be provided if user wants it returned as part of any output, otherwise it will be autogenerated, if needed, by CDS system. Does not need to be the actual ID of the source system.
	 */
	public ArrayList<Identifier> getIdentifier() { return identifier; }

	/**
	 * Setter for identifier
	 * @param value A unique ID of this request for reference purposes. It must be provided if user wants it returned as part of any output, otherwise it will be autogenerated, if needed, by CDS system. Does not need to be the actual ID of the source system.
	 */
	public void setIdentifier(ArrayList<Identifier> value) { identifier = value; }


	@Expose
	private ArrayList<Reference> basedOn;

	/**
	 * Getter for basedOn
	 * @return A plan or proposal that is fulfilled in whole or in part by this request.
	 */
	public ArrayList<Reference> getBasedOn() { return basedOn; }

	/**
	 * Setter for basedOn
	 * @param value A plan or proposal that is fulfilled in whole or in part by this request.
	 */
	public void setBasedOn(ArrayList<Reference> value) { basedOn = value; }


	@Expose
	private ArrayList<Reference> replaces;

	/**
	 * Getter for replaces
	 * @return Completed or terminated request(s) whose function is taken by this new request.
	 */
	public ArrayList<Reference> getReplaces() { return replaces; }

	/**
	 * Setter for replaces
	 * @param value Completed or terminated request(s) whose function is taken by this new request.
	 */
	public void setReplaces(ArrayList<Reference> value) { replaces = value; }


	@Expose
	private Identifier groupIdentifier;

	/**
	 * Getter for groupIdentifier
	 * @return A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form.
	 */
	public Identifier getGroupIdentifier() { return groupIdentifier; }

	/**
	 * Setter for groupIdentifier
	 * @param value A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form.
	 */
	public void setGroupIdentifier(Identifier value) { groupIdentifier = value; }


	@Expose
	private String status;

	/**
	 * Getter for status
	 * @return The status of the proposal or order.
	 */
	public String getStatus() { return status; }

	/**
	 * Setter for status
	 * @param value The status of the proposal or order.
	 */
	public void setStatus(String value) { status = value; }


	@Expose
	private ArrayList<CodeableConcept> category;

	/**
	 * Getter for category
	 * @return The type of message to be sent such as alert, notification, reminder, instruction, etc.
	 */
	public ArrayList<CodeableConcept> getCategory() { return category; }

	/**
	 * Setter for category
	 * @param value The type of message to be sent such as alert, notification, reminder, instruction, etc.
	 */
	public void setCategory(ArrayList<CodeableConcept> value) { category = value; }


	@Expose
	private String priority;

	/**
	 * Getter for priority
	 * @return Characterizes how quickly the proposed act must be initiated. Includes concepts such as stat, urgent, routine.
	 */
	public String getPriority() { return priority; }

	/**
	 * Setter for priority
	 * @param value Characterizes how quickly the proposed act must be initiated. Includes concepts such as stat, urgent, routine.
	 */
	public void setPriority(String value) { priority = value; }


	@Expose
	private ArrayList<CodeableConcept> medium;

	/**
	 * Getter for medium
	 * @return A channel that was used for this communication (e.g. email, fax).
	 */
	public ArrayList<CodeableConcept> getMedium() { return medium; }

	/**
	 * Setter for medium
	 * @param value A channel that was used for this communication (e.g. email, fax).
	 */
	public void setMedium(ArrayList<CodeableConcept> value) { medium = value; }


	@Expose
	private Reference subject;

	/**
	 * Getter for subject
	 * @return The patient or group that is the focus of this communication request.
	 */
	public Reference getSubject() { return subject; }

	/**
	 * Setter for subject
	 * @param value The patient or group that is the focus of this communication request.
	 */
	public void setSubject(Reference value) { subject = value; }


	@Expose
	private ArrayList<Reference> recipient;

	/**
	 * Getter for recipient
	 * @return The entity (e.g. person, organization, clinical information system, device, group, or care team) which is the intended target of the communication.
	 */
	public ArrayList<Reference> getRecipient() { return recipient; }

	/**
	 * Setter for recipient
	 * @param value The entity (e.g. person, organization, clinical information system, device, group, or care team) which is the intended target of the communication.
	 */
	public void setRecipient(ArrayList<Reference> value) { recipient = value; }


	@Expose
	private ArrayList<Reference> topic;

	/**
	 * Getter for topic
	 * @return The resources which were related to producing this communication request.
	 */
	public ArrayList<Reference> getTopic() { return topic; }

	/**
	 * Setter for topic
	 * @param value The resources which were related to producing this communication request.
	 */
	public void setTopic(ArrayList<Reference> value) { topic = value; }


	@Expose
	private Reference context;

	/**
	 * Getter for context
	 * @return The encounter or episode of care within which the communication request was created.
	 */
	public Reference getContext() { return context; }

	/**
	 * Setter for context
	 * @param value The encounter or episode of care within which the communication request was created.
	 */
	public void setContext(Reference value) { context = value; }


	@Expose
	private ArrayList<CommunicationRequestPayload> payload;

	/**
	 * Getter for payload
	 * @return Text, attachment(s), or resource(s) to be communicated to the recipient.
	 */
	public ArrayList<CommunicationRequestPayload> getPayload() { return payload; }

	/**
	 * Setter for payload
	 * @param value Text, attachment(s), or resource(s) to be communicated to the recipient.
	 */
	public void setPayload(ArrayList<CommunicationRequestPayload> value) { payload = value; }


	@Expose
	@JsonAdapter(DateTimeAdapterDateTime.class)
	private Date occurrenceDateTime;

	/**
	 * Getter for occurrenceDateTime
	 * @return The time when this communication is to occur.
	 */
	public Date getOccurrenceDateTime() { return occurrenceDateTime; }

	/**
	 * Setter for occurrenceDateTime
	 * @param value The time when this communication is to occur.
	 */
	public void setOccurrenceDateTime(Date value) { occurrenceDateTime = value; }


	@Expose
	private Period occurrencePeriod;

	/**
	 * Getter for occurrencePeriod
	 * @return The time when this communication is to occur.
	 */
	public Period getOccurrencePeriod() { return occurrencePeriod; }

	/**
	 * Setter for occurrencePeriod
	 * @param value The time when this communication is to occur.
	 */
	public void setOccurrencePeriod(Period value) { occurrencePeriod = value; }


	@Expose
	@JsonAdapter(DateTimeAdapterDateTime.class)
	private Date authoredOn;

	/**
	 * Getter for authoredOn
	 * @return For draft requests, indicates the date of initial creation.  For requests with other statuses, indicates the date of activation.
	 */
	public Date getAuthoredOn() { return authoredOn; }

	/**
	 * Setter for authoredOn
	 * @param value For draft requests, indicates the date of initial creation.  For requests with other statuses, indicates the date of activation.
	 */
	public void setAuthoredOn(Date value) { authoredOn = value; }


	@Expose
	private Reference sender;

	/**
	 * Getter for sender
	 * @return The entity (e.g. person, organization, clinical information system, or device) which is to be the source of the communication.
	 */
	public Reference getSender() { return sender; }

	/**
	 * Setter for sender
	 * @param value The entity (e.g. person, organization, clinical information system, or device) which is to be the source of the communication.
	 */
	public void setSender(Reference value) { sender = value; }


	@Expose
	private CommunicationRequestRequester requester;

	/**
	 * Getter for requester
	 * @return The individual who initiated the request and has responsibility for its activation.
	 */
	public CommunicationRequestRequester getRequester() { return requester; }

	/**
	 * Setter for requester
	 * @param value The individual who initiated the request and has responsibility for its activation.
	 */
	public void setRequester(CommunicationRequestRequester value) { requester = value; }


	@Expose
	private ArrayList<CodeableConcept> reasonCode;

	/**
	 * Getter for reasonCode
	 * @return Describes why the request is being made in coded or textual form.
	 */
	public ArrayList<CodeableConcept> getReasonCode() { return reasonCode; }

	/**
	 * Setter for reasonCode
	 * @param value Describes why the request is being made in coded or textual form.
	 */
	public void setReasonCode(ArrayList<CodeableConcept> value) { reasonCode = value; }


	@Expose
	private ArrayList<Reference> reasonReference;

	/**
	 * Getter for reasonReference
	 * @return Indicates another resource whose existence justifies this request.
	 */
	public ArrayList<Reference> getReasonReference() { return reasonReference; }

	/**
	 * Setter for reasonReference
	 * @param value Indicates another resource whose existence justifies this request.
	 */
	public void setReasonReference(ArrayList<Reference> value) { reasonReference = value; }


	@Expose
	private ArrayList<Annotation> note;

	/**
	 * Getter for note
	 * @return Comments made about the request by the requester, sender, recipient, subject or other participants.
	 */
	public ArrayList<Annotation> getNote() { return note; }

	/**
	 * Setter for note
	 * @param value Comments made about the request by the requester, sender, recipient, subject or other participants.
	 */
	public void setNote(ArrayList<Annotation> value) { note = value; }


}
