package com.xinonix.hl7.fhir.stu3;

import java.util.ArrayList;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;


/**
 * A set of rules of how FHIR is used to solve a particular problem. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
 */
public class ImplementationGuidePage extends BackboneElement {
	@Expose
	private String source;

	/**
	 * Getter for source
	 * @return The source address for the page.
	 */
	public String getSource() { return source; }

	/**
	 * Setter for source
	 * @param value The source address for the page.
	 */
	public void setSource(String value) { source = value; }


	@Expose
	private String title;

	/**
	 * Getter for title
	 * @return A short title used to represent this page in navigational structures such as table of contents, bread crumbs, etc.
	 */
	public String getTitle() { return title; }

	/**
	 * Setter for title
	 * @param value A short title used to represent this page in navigational structures such as table of contents, bread crumbs, etc.
	 */
	public void setTitle(String value) { title = value; }


	public enum Kind{
		@SerializedName("page") PAGE,
		@SerializedName("example") EXAMPLE,
		@SerializedName("list") LIST,
		@SerializedName("include") INCLUDE,
		@SerializedName("directory") DIRECTORY,
		@SerializedName("dictionary") DICTIONARY,
		@SerializedName("toc") TOC,
		@SerializedName("resource") RESOURCE
	}

	@Expose
	private Kind kind;

	/**
	 * Getter for kind
	 * @return The kind of page that this is. Some pages are autogenerated (list, example), and other kinds are of interest so that tools can navigate the user to the page of interest.
	 */
	public Kind getKind() { return kind; }

	/**
	 * Setter for kind
	 * @param value The kind of page that this is. Some pages are autogenerated (list, example), and other kinds are of interest so that tools can navigate the user to the page of interest.
	 */
	public void setKind(Kind value) { kind = value; }


	@Expose
	private ArrayList<String> type;

	/**
	 * Getter for type
	 * @return For constructed pages, what kind of resources to include in the list.
	 */
	public ArrayList<String> getType() { return type; }

	/**
	 * Setter for type
	 * @param value For constructed pages, what kind of resources to include in the list.
	 */
	public void setType(ArrayList<String> value) { type = value; }


	@Expose
	@SerializedName("package")
	private ArrayList<String> packageValue;

	/**
	 * Getter for packageValue
	 * @return For constructed pages, a list of packages to include in the page (or else empty for everything).
	 */
	public ArrayList<String> getPackage() { return packageValue; }

	/**
	 * Setter for packageValue
	 * @param value For constructed pages, a list of packages to include in the page (or else empty for everything).
	 */
	public void setPackage(ArrayList<String> value) { packageValue = value; }


	@Expose
	private String format;

	/**
	 * Getter for format
	 * @return The format of the page.
	 */
	public String getFormat() { return format; }

	/**
	 * Setter for format
	 * @param value The format of the page.
	 */
	public void setFormat(String value) { format = value; }


	@Expose
	private ArrayList<ImplementationGuidePage> page;

	/**
	 * Getter for page
	 * @return Nested Pages/Sections under this page.
	 */
	public ArrayList<ImplementationGuidePage> getPage() { return page; }

	/**
	 * Setter for page
	 * @param value Nested Pages/Sections under this page.
	 */
	public void setPage(ArrayList<ImplementationGuidePage> value) { page = value; }


}
